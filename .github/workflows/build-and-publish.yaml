name: "Build and Publish Container"

on:
  workflow_call:
    inputs:
      push:
        type: boolean
        default: false
        description: "Push the built container to the registry"
      release-type:
        type: string
        default: "branch"
        description: "The version type to release. Valid values are 'branch', 'prerelease', and 'release'"

env:
  REGISTRY: "ghcr.io"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v3

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v2

      - name: "Set up Python 3"
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
          cache: "pip"

      - name: "Install semversioner"
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade semversioner

      - name: "Set up version string"
        id: "version"
        run: |
          case "${{ inputs.release-type }}" in
            branch)
              echo "version-string=0.0.0-${{ github.ref_name }}" >> "${GITHUB_OUTPUT}"
              ;;
          
            prerelease)
              echo "version-string={{version}}-prerelease" >> "${GITHUB_OUTPUT}"
              ;;
          
            release)
              echo "version-string={{version}}" >> "${GITHUB_OUTPUT}"
              ;;
          
            *)
              echo "'${{ inputs.release-type }}' is not a valid choice for release-type!" >&2
              exit 1
              ;;
          esac

          echo "current-version=$(semversioner current-version)" >> "${GITHUB_OUTPUT}"

      - name: "Extract Docker metadata"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: "${{ env.REGISTRY }}/${{ github.repository }}"
          tags: |
            type=semver,pattern=${{ steps.version.version-string }},value=${{ steps.version.current-version }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        uses: docker/login-action@v2
        if: ${{ inputs.push }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "Build ${{ inputs.push && 'and Push' || '' }} Image"
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
